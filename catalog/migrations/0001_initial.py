# Generated by Django 2.1.1 on 2018-11-07 13:09

import app.my_storage
import app.utils
import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('DRAFT', 'Черновик'), ('PUBLIC', 'Опубликованно')], default='DRAFT', max_length=20, verbose_name='Статус')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('image', models.ImageField(blank=True, null=True, storage=app.my_storage.MyStorage(), upload_to=app.utils.fn, verbose_name='Кузов (180x110)')),
                ('info', models.CharField(blank=True, max_length=100, null=True, verbose_name='Доп. инфо')),
                ('views', models.IntegerField(default=0, verbose_name='Просмотров')),
                ('current_day', models.DateField(null=True)),
                ('video', models.URLField(blank=True, max_length=255, null=True, verbose_name='Ссылка на видео')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Описание')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Добавлено')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('order', models.PositiveIntegerField(blank=True, null=True)),
                ('seo_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='СЕО Заголовок')),
                ('meta_description', models.CharField(blank=True, max_length=160, null=True, verbose_name='Мета описание')),
                ('meta_keywords', models.CharField(blank=True, max_length=160, null=True, verbose_name='Ключевые слова')),
                ('meta_image', models.ImageField(blank=True, null=True, storage=app.my_storage.MyStorage(), upload_to=app.utils.fn, verbose_name='Изображение для соц. сетей')),
            ],
            options={
                'verbose_name': 'Чехол',
                'verbose_name_plural': 'Чехлы',
            },
        ),
        migrations.CreateModel(
            name='CatalogPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(choices=[('MAKE', 'Марки'), ('ACCESSORIES', 'Аксессуары'), ('MATES', 'Коврики'), ('CAPES', 'Накидки'), ('BRAIDS', 'Оплётки')], default='DRAFT', max_length=20, verbose_name='Что выводить')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('video', models.URLField(blank=True, max_length=255, null=True, verbose_name='Ссылка на видео')),
                ('title_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Заголовок описания')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Описание')),
                ('order', models.PositiveIntegerField(blank=True, null=True)),
                ('seo_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='СЕО Заголовок')),
                ('meta_description', models.CharField(blank=True, max_length=160, null=True, verbose_name='Мета описание')),
                ('meta_keywords', models.CharField(blank=True, max_length=160, null=True, verbose_name='Ключевые слова')),
                ('meta_image', models.ImageField(blank=True, null=True, storage=app.my_storage.MyStorage(), upload_to=app.utils.fn, verbose_name='Изображение для соц. сетей')),
            ],
            options={
                'verbose_name': 'Страница каталога',
                'verbose_name_plural': 'Страницы каталога',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, verbose_name='Код товара')),
                ('material_name', models.CharField(max_length=255, verbose_name='Материал')),
                ('color_name', models.CharField(max_length=255, verbose_name='Цвет')),
                ('image', models.ImageField(blank=True, null=True, storage=app.my_storage.MyStorage(), upload_to=app.utils.fn, verbose_name='Миниатюра (30x40)')),
                ('big_image', models.ImageField(blank=True, null=True, storage=app.my_storage.MyStorage(), upload_to=app.utils.fn, verbose_name='Превью (386x386)')),
                ('order', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.CreateModel(
            name='Guarantee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('period', models.CharField(max_length=255, verbose_name='Срок действия')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Контент')),
                ('order', models.PositiveIntegerField(blank=True, null=True)),
                ('seo_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='СЕО Заголовок')),
                ('meta_description', models.CharField(blank=True, max_length=160, null=True, verbose_name='Мета описание')),
                ('meta_keywords', models.CharField(blank=True, max_length=160, null=True, verbose_name='Ключевые слова')),
                ('meta_image', models.ImageField(blank=True, null=True, storage=app.my_storage.MyStorage(), upload_to=app.utils.fn, verbose_name='Изображение для соц. сетей')),
            ],
            options={
                'verbose_name': 'Гарантия',
                'verbose_name_plural': 'Гарантии',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(storage=app.my_storage.MyStorage(), upload_to=app.utils.fn, verbose_name='Изображение')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('alt', models.CharField(max_length=255, verbose_name='Альт')),
                ('order', models.IntegerField(default=0, verbose_name='Порядок')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children_images', to='catalog.Case', verbose_name='Чехол')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Галлерея',
            },
        ),
        migrations.CreateModel(
            name='Install',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Контент')),
                ('order', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Где установить',
                'verbose_name_plural': 'Где установить',
            },
        ),
        migrations.CreateModel(
            name='Make',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('image', models.ImageField(blank=True, null=True, storage=app.my_storage.MyStorage(), upload_to=app.utils.fn, verbose_name='Изображение (500x296)')),
                ('video', models.URLField(blank=True, max_length=255, null=True, verbose_name='Ссылка на видео')),
                ('title_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Заголовок описания')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Описание')),
                ('order', models.PositiveIntegerField(blank=True, null=True)),
                ('seo_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='СЕО Заголовок')),
                ('meta_description', models.CharField(blank=True, max_length=160, null=True, verbose_name='Мета описание')),
                ('meta_keywords', models.CharField(blank=True, max_length=160, null=True, verbose_name='Ключевые слова')),
                ('meta_image', models.ImageField(blank=True, null=True, storage=app.my_storage.MyStorage(), upload_to=app.utils.fn, verbose_name='Изображение для соц. сетей')),
            ],
            options={
                'verbose_name': 'Марка',
                'verbose_name_plural': 'Марки',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('price', models.IntegerField(verbose_name='Цена')),
                ('stock', models.BooleanField(blank=True, default=False, null=True, verbose_name='Только под заказ')),
                ('order', models.PositiveIntegerField(blank=True, null=True)),
                ('colors', models.ManyToManyField(to='catalog.Color', verbose_name='Цвета')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children_materials', to='catalog.Case', verbose_name='Чехол')),
            ],
            options={
                'verbose_name': 'Материал',
                'verbose_name_plural': 'Материалы',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('order', models.PositiveIntegerField(blank=True, null=True, verbose_name='Порядок')),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Make', verbose_name='Марка')),
            ],
            options={
                'verbose_name': 'Модель',
                'verbose_name_plural': 'Модели',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Контент')),
                ('order', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Наличие в магазинах',
                'verbose_name_plural': 'Наличие в магазинах',
            },
        ),
        migrations.CreateModel(
            name='UniversalCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('products_type', models.CharField(choices=[('ACCESSORY', 'Аксессуары'), ('MATE', 'Автоковрики'), ('CAPE', 'Автонакидки'), ('BRAIDS', 'Оплётки')], max_length=20, verbose_name='Тип товаров')),
                ('order', models.PositiveIntegerField(blank=True, null=True, verbose_name='Порядок')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории товаров',
            },
        ),
        migrations.CreateModel(
            name='UniversalColor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_name', models.CharField(max_length=255, verbose_name='Цвет')),
                ('image', models.ImageField(blank=True, null=True, storage=app.my_storage.MyStorage(), upload_to=app.utils.fn, verbose_name='Миниатюра (50x65)')),
                ('big_image', models.ImageField(blank=True, null=True, storage=app.my_storage.MyStorage(), upload_to=app.utils.fn, verbose_name='Превью (386x386)')),
                ('order', models.IntegerField(default=0, verbose_name='Порядок')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.CreateModel(
            name='UniversalImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(storage=app.my_storage.MyStorage(), upload_to=app.utils.fn, verbose_name='Изображение')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('alt', models.CharField(max_length=255, verbose_name='Альт')),
                ('order', models.IntegerField(default=0, verbose_name='Порядок')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Галлерея',
            },
        ),
        migrations.CreateModel(
            name='UniversalProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('DRAFT', 'Черновик'), ('PUBLIC', 'Опубликованно')], default='ACCESSORY', max_length=20, verbose_name='Статус')),
                ('product_type', models.CharField(choices=[('ACCESSORY', 'Аксессуары'), ('MATE', 'Автоковрики'), ('CAPE', 'Автонакидки'), ('BRAIDS', 'Оплётки')], default='DRAFT', max_length=20, verbose_name='Тип товара')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('image', models.ImageField(blank=True, null=True, storage=app.my_storage.MyStorage(), upload_to=app.utils.fn, verbose_name='Изображение (800x450)')),
                ('info', models.CharField(blank=True, max_length=100, null=True, verbose_name='Доп. инфо')),
                ('views', models.IntegerField(default=0, verbose_name='Просмотров')),
                ('current_day', models.DateField(null=True)),
                ('video', models.URLField(blank=True, max_length=255, null=True, verbose_name='Ссылка на видео')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Описание')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Добавлено')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('order', models.PositiveIntegerField(blank=True, null=True)),
                ('seo_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='СЕО Заголовок')),
                ('meta_description', models.CharField(blank=True, max_length=160, null=True, verbose_name='Мета описание')),
                ('meta_keywords', models.CharField(blank=True, max_length=160, null=True, verbose_name='Ключевые слова')),
                ('meta_image', models.ImageField(blank=True, null=True, storage=app.my_storage.MyStorage(), upload_to=app.utils.fn, verbose_name='Изображение для соц. сетей')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.UniversalCategory', verbose_name='Категория')),
                ('guarantee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.Guarantee', verbose_name='Гарантия')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='UniversalSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('price', models.IntegerField(verbose_name='Цена')),
                ('stock', models.BooleanField(blank=True, default=False, null=True, verbose_name='Только под заказ')),
                ('order', models.IntegerField(default=0, verbose_name='Порядок')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children_sizes', to='catalog.UniversalProduct', verbose_name='Аксессуар')),
            ],
            options={
                'verbose_name': 'Размер',
                'verbose_name_plural': 'Размеры',
            },
        ),
        migrations.AddField(
            model_name='universalimage',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children_images', to='catalog.UniversalProduct', verbose_name='Аксессуар'),
        ),
        migrations.AddField(
            model_name='universalcolor',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children_colors', to='catalog.UniversalProduct', verbose_name='Аксессуар'),
        ),
        migrations.AddField(
            model_name='case',
            name='guarantee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.Guarantee', verbose_name='Гарантия'),
        ),
        migrations.AddField(
            model_name='case',
            name='install',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.Install', verbose_name='Установка'),
        ),
        migrations.AddField(
            model_name='case',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Model', verbose_name='Модель'),
        ),
        migrations.AddField(
            model_name='case',
            name='stock',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.Stock', verbose_name='Наличие в магазинах'),
        ),
        migrations.AddField(
            model_name='case',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
    ]
